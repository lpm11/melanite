@import "syntax-variables";

// -----------------------------------------------------------------------------
// General

atom-text-editor, :host {
  background-color: @syntax-background-color;
  color: @syntax-text-color;

  .wrap-guide {
    background-color: @syntax-wrap-guide-color;
  }

  .indent-guide {
    color: @syntax-indent-guide-color;
  }

  .invisible-character {
    color: @syntax-invisible-character-color;
  }

  .gutter {
    background-color: @syntax-gutter-background-color;
    color: @syntax-gutter-text-color;

    .line-number {
      &.cursor-line {
        background-color: @syntax-gutter-background-color-selected;
        color: @syntax-gutter-text-color-selected;
      }

      &.cursor-line-no-selection {
        color: @syntax-gutter-text-color-selected;
      }
    }
  }

  .gutter .line-number.folded,
  .gutter .line-number:after,
  .fold-marker:after {
    color: @fga;
  }

  .invisible {
    color: @syntax-text-color;
  }

  .cursor {
    color: @syntax-cursor-color;
  }

  .selection .region {
    background-color: @syntax-selection-color;
  }
}

atom-text-editor .cursor-line {
  background-color: @syntax-selection-color;
}

atom-text-editor .search-results .marker .region,
:host .search-results .marker .region {
  background-color: transparent;
  border: 1px solid @syntax-result-marker-color;
}

atom-text-editor .search-results .marker.current-result .region,
:host .search-results .marker.current-result .region {
  border: 1px solid @syntax-result-marker-color-selected;
}

.none {
  color: @syntax-text-color;
}

.comment {
  color: @fga;
}

// -----------------------------------------------------------------------------
// For source code (and some markup)

// -----------------------------------------------------------------------------
// @red (hue: 005)
// - Invalid code

.invalid {
  background-color: @red-l50;
  color: @fg2;
}

// -----------------------------------------------------------------------------
// @orange (hue: 065)
// - String
// - Interpolated string
// - Dictionary string value

.string {
  color: @orange;
}

.string.interpolated {
  color: @orange;
}

.meta.structure.dictionary.value > .string {
  color: @orange;
}

// -----------------------------------------------------------------------------
// @yellow (hue: 095)
// - Operator
// - Constant value
// - Constant symbol (e.g. :symbol in ruby)
// - Escape string, placeholder
// - Unit (e.g. XXpx, XXmm)

.keyword.operator {
  color: @yellow
}

.constant.numeric,
.constant.language,
.support.constant {
  color: @yellow-l80;
}

.constant.other.symbol,
.punctuation.definition.constant {
  color: @yellow-l80;
}

.constant.character.escape,
.constant.character.entity,
.constant.other.placeholder {
  color: @yellow-l80;
}

.keyword.other.unit {
  color: @yellow;
}

// -----------------------------------------------------------------------------
// @green (hue: 125)
// - Keyword
// - Type
// - Kernel function
// - Storage
// - Tag
// - Dictionary key

.keyword {
  color: @green;
}

.support.type {
  color: @green;
}

.support.function.kernel {
  color: @green;
}

.storage {
  color: @green;
}

.entity.name.tag {
  color: @green;
}

.meta.structure.dictionary > .string {
  color: @green;
}

// -----------------------------------------------------------------------------
// @cyan (hue: 185)
// - Function

.entity.name.function,
.support.function {
  color: @cyan;
}

// -----------------------------------------------------------------------------
// @blue (hue: 245)
// - Class definition
// - Enum definition
// - Class

.entity.name.class,
.entity.name.type.class,
.meta.class-struct-block > .entity.name {
  color: @blue;
  text-decoration: underline;
}

.support.class,
.entity.other.inherited-class {
  color: @blue;
  text-decoration: none;
}

// -----------------------------------------------------------------------------
// @purple (hue: 305)
// - Preprocessor keyword
// - Preprocessor function (#define)
// - Constant variable
// - Property name
// - Attribute name

.meta.preprocessor .keyword {
  color: @purple-l65;
}

.entity.name.function.preprocessor {
  color: @purple;
}

.variable.other.constant {
  color: @purple;
}

.support.type.property-name {
  color: @purple;
}

.entity.other.attribute-name {
  color: @purple;
}

// -----------------------------------------------------------------------------
// @violet (hue: 335)
// - Embedded string section prefix & suffix (e.g. "#{}" in ruby, "<?php" in php)

.punctuation.section.embedded {
  color: @violet;
}

.meta.namespace-block > .entity.name {
  color: @violet;
}

// -----------------------------------------------------------------------------
// For markup

// -----------------------------------------------------------------------------
// @red (hue: 005)
// - Strike out

.markup.strike {
  color: @red-l50;
  text-decoration: line-through;
}

// -----------------------------------------------------------------------------
// @orange (hue: 065)
// - Raw string (e.g. `` in gfm)

.markup.raw {
  color: @orange;
}

// -----------------------------------------------------------------------------
// @yellow (hue: 095)

// -----------------------------------------------------------------------------
// @green (hue: 125)
// - Heading

.markup.heading {
  color: @green;
}

.comment .markup.heading {
  .markup.heading;
  color: @green-l50;
}

// -----------------------------------------------------------------------------
// @cyan (hue: 185)

// -----------------------------------------------------------------------------
// @blue (hue: 245)

// -----------------------------------------------------------------------------
// @purple (hue: 305)
// - Italic

.markup.italic {
  color: @purple;
  font-style: italic;
}

.comment .markup.italic {
  .markup.italic;
  color: @purple-l50;
}

// -----------------------------------------------------------------------------
// @violet (hue: 335)
// - Bold

.markup.bold {
  color: @violet;
  font-style: bold;
}

.comment .markup.bold {
  .markup.bold;
  color: @violet-l50;
}

// -----------------------------------------------------------------------------
// Others

.string.link,
.markup.link {
  color: @blue-l85;
}

.comment {
  .string.link,
  .markup.link {
    color: @blue-l50;
  }
}

// -----------------------------------------------------------------------------
// Canceling

.punctuation {
  color: @syntax-text-color;

  &.comment {
    .comment;
  }
}

// -----------------------------------------------------------------------------
// None

.variable,
.punctuation.variable {
}
